import Eth from 'ethjs';
interface HttpProvider {
    host: string;
    timeout: number;
}
interface Provider {
    network: string;
    provider: HttpProvider;
}
interface DeployedRegistryContract {
    entries(bytes: string): string[];
}
export declare class MethodRegistry {
    eth: Eth;
    provider: HttpProvider;
    registry: DeployedRegistryContract;
    constructor(opts: Provider);
    /**
   * @param bytes - The `0x`-prefixed hexadecimal string representing the four-byte signature of the contract method to lookup.
   */
    lookup(bytes: string): Promise<string | undefined>;
    parse(signature: string): {
        name: string;
        args: {
            type: string;
        }[];
    } | {
        name?: undefined;
        args?: undefined;
    };
}
export {};
